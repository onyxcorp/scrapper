{
  "name": "collection",
  "version": "1.0.0",
  "description": "Management tool for javascript collections based on Backbone.collection",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/onyxcorp/collection.git"
  },
  "keywords": [
    "collections",
    "backbone"
  ],
  "author": {
    "name": "fabioz zaffani"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/onyxcorp/collection/issues"
  },
  "homepage": "https://github.com/onyxcorp/collection",
  "dependencies": {
    "backbone-extend-standalone": "git+https://github.com/gre/backbone-extend-standalone",
    "lodash-node": "git+https://github.com/lodash/lodash-node.git#2.4.1",
    "model": "git+https://github.com/onyxcorp/model"
  },
  "readme": "# Collection\n\nCollections management for javascript based on Backbone.collections, created\nto be used with Flux Architecture.\n\nThe main differences from Backbone.collections are:\n\n* No auto-sync with database, thus separating how the data is created/updated\nand how it should be done with the server (ideally through an external API file);\n* No internal event system, in order to keep all the events to flow only through a central dispatcher;\n* Implemented with [lodash-node](https://www.npmjs.com/package/lodash-node \"lodash node\") instead of underscore;\n\n## Methods/attributes overview\n\n### Attributes\n* model\n\n### Methods\n* initialize - initialization method\n* toJSON - returns the attributes of the models as an numbered index (array)\n* toObjectJSON - returns the attributes of the models with the primary attribute as the key (dictionary array)\n* add - to add a new model to the collection (pre-configured shortcut to set)\n* remove - to remove a model from the collection (pre-configured shortcut to set)\n* set - to add/update/remove any model from the collection\n* reset - reset the collection to it's default state, accept a new list of models to repopulate the collection\n* get - get a model from the collection by the model or it's index\n* clone - clone the entire collection with it's current data\n* modelId - get some model ID\n* modelUpdate - method that is normally used by the models in the collection when it's data is updated. This is used to keep the collection references (_byId) updated\n* push - add a model to the bottom of the collection\n* pop - remove a model from the bottom of the collection\n* unshift - add a model to the beggining of the collection\n* shift - remove a model from the beggining of the collection\n* slice - remove a sub-array of models from the collectio\n* at - get the model at a given index position on the collection\n* findWhere - work as a shortcut to where called with the second argument as true\n* where - return a model with matching attributes\n* sort - force the collection to sort itself\n* pluck - pluck an attribute from each model on the collection\n* _reset - reset the collection to an empty state\n* _prepareModel - prepare a model to be added to the collection\n* _addReference - tie a model to the collection and to the _byId reference\n* _removeReference - remove a model tie from the collection and from the _byId reference\n* _isModel - check if the model being added matches the collection model attribute\n\n### Sorting Methods\n\nThe sorting methods work as a shortcut to their respective lodash implementations,\nthey are automatically used with the collection.models attribute as the data source.\n* [groupBy](https://lodash.com/docs#groupBy)\n* [countBy](https://lodash.com/docs#countBy)\n* [sortBy](https://lodash.com/docs#sortBy)\n* [indexBy](https://lodash.com/docs#indexBy)\n\n### Lodash methods\n\nThose methods work as a shortcut to their respective lodash implementations, they\nare automatically used with the collection.models attribute as the data source.\n\n* [forEach](https://lodash.com/docs#forEach)\n* [map](https://lodash.com/docs#map)\n* [reduce](https://lodash.com/docs#reduce)\n* [reduceRight](https://lodash.com/docs#reduceRight)\n* [reject](https://lodash.com/docs#reject)\n* [every](https://lodash.com/docs#every)\n* [some](https://lodash.com/docs#some)\n* [contains](https://lodash.com/docs#contains)\n* [invoke](https://lodash.com/docs#invoke)\n* [max](https://lodash.com/docs#max)\n* [min](https://lodash.com/docs#min)\n* [toArray](https://lodash.com/docs#toArray)\n* [size](https://lodash.com/docs#size)\n* [first](https://lodash.com/docs#first)\n* [last](https://lodash.com/docs#last)\n* [shuffle](https://lodash.com/docs#shuffle)\n* [without](https://lodash.com/docs#without)\n* [difference](https://lodash.com/docs#difference)\n* [initial](https://lodash.com/docs#initial)\n* [rest](https://lodash.com/docs#rest)\n",
  "readmeFilename": "README.md",
  "_id": "collection@1.0.0",
  "_shasum": "ea5cc54b921f31bd1583ea43c6bb11b4260e9dd9",
  "_resolved": "git+https://github.com/onyxcorp/collection#8a07c57a4b547cbf683c89f4799e69b07f36decd",
  "_from": "git+https://github.com/onyxcorp/collection"
}
