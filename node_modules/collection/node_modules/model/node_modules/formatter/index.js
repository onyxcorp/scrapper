var lodash = {
        string: require('underscore.string'),
        objects: {
            assign: require('lodash-node/modern/objects/assign')
        },
        collections: {
            forEach: require('lodash-node/modern/collections/forEach')
        },
        utils: {
            escape: require('lodash-node/modern/utilities/escape')
        }
    },
    Decimal = require('decimal.js'),
    decimalConfig,
    Formatter;

/**
 * Default decimal and numbers configuration
 */
decimalConfig = {
    precision: 20,
    rounding: 4,
    toExpNeg: -7,
    toExpPos: 21,
    minE: -9e15,
    maxE: 9e15,
    errors: true,
    crypto: false,
    modulo: 1,
    format: {
        decimalSeparator : '.',
        groupSeparator : ',',
        groupSize : 3,
        secondaryGroupSize : 0,
        fractionGroupSeparator : '\xA0',    // non-breaking space
        fractionGroupSize : 0
    }
};

/**
 *  This class should be used to transform data from one type to another
 *  Like turning "0.00" (string) into a decimal/float 0.00 or any other type of
 *  changes like that
 *  It also works as a wrapper to the underscore.string class
 */
Formatter = {
    // this default formatting is used by the Decimal object
    setDecimalConfig: function (config) {
        lodash.objects.assign(decimalConfig, config);
    },

    escapeHTML: function escapeHTML(data) {
        return lodash.utils.escape(data);
    }
};

// Lodash/underscore.string Formatter methods
// https://github.com/epeli/underscore.string
lodash.collections.forEach(['camelize', 'capitalize', 'titleize', 'dasherize', 'humanize',
    'trim', 'truncate', 'prune', 'words', 'quote', 'unquote'], function (method) {
    Formatter[method] = function () {
        var args = [].slice.call(arguments);
        return lodash.string[method].apply(lodash.string, args);
    };
});

// Decimal Formatter methods
// https://github.com/MikeMcl/decimal.js/
// Docs: http://mikemcl.github.io/decimal.js

lodash.collections.forEach(['toFixed', 'toExponential', 'toPrecision', 'toFormat',
    'truncated'], function (method) {
    Formatter[method] = function (number) {
        var decimal,
            args;
        args = [].slice.call(arguments);

        Decimal.config(decimalConfig);
        decimal = new Decimal(number);

        // remove the known attributes
        lodash.arrays.remove(args, function(value) {
            return value === number;
        });

        return decimal[method].apply(decimal, args);
    };
});

module.exports = Formatter;
